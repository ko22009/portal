Чтобы загрузить CSV необходимо:
1. разбить файл на строки.
2. каждую строку разделить запятыми.
3. строки необходимо обернуть в кавычки.
4. идет преобразование данных.

Все это загружает процессор.

Пути оптимизация алгоритма:
Перенос вычисления значений, которые не изменяются внутри цикла, за пределы цикла.
А также оптимизация алгоритма с помощью грамотной организации данных.
Избагать использования рекурсии на больших объемах данных.

С помощью профилировщика python можно понять, где узкие места приложения.
При чтении и обработки данных из csv используются слабо оптимизированные библиотеки.
Например замена Pandas на PyArrow дает хороший прирост.

Одно из решений быстрого чтения csv файла, читать данные в другом формате.
Например, использовать формат данных Parquet.
Файлы Parquet предназначены для быстрого чтения: не нужно выполнять столько синтаксического анализа, как в случае с CSV.
И в отличие от CSV, где тип столбца не закодирован в файле, в Parquet типы столбцов хранятся в самом файле.

Также на скорость обработки влияет параллельное вычисление. Если оно есть, то можно быстрее выполнить вычисления.

CSV - плохой формат. Помимо неэффективности синтаксического анализа, отсутствие данных о типах означает, что синтаксический анализ всегда будет подверженным ошибкам и неоднозначности, чем формат структурированного файла с фактическими типами столбцов.
Поэтому лучше избегайте использования CSV.
